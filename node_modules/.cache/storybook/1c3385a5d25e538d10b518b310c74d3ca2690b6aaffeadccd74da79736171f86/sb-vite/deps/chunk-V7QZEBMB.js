import {
  __export
} from "./chunk-CXDQJFHQ.js";
import {
  dedent
} from "./chunk-JLBFQ2EK.js";
import {
  G,
  _,
  k,
  preact_module_exports
} from "./chunk-VBHGAG3O.js";

// node_modules/@storybook/preact/dist/chunk-YWXRTNBA.mjs
var entry_preview_exports = {};
__export(entry_preview_exports, { parameters: () => parameters, render: () => render2, renderToCanvas: () => renderToCanvas });
var { h: h2 } = preact_module_exports;
var render2 = (args, context) => {
  let { id, component: Component } = context;
  if (!Component) throw new Error(`Unable to render story ${id} as the component annotation is missing from the default export`);
  return h2(Component, { ...args });
};
var renderedStory;
function preactRender(story, canvasElement) {
  k ? G(story, canvasElement) : renderedStory = G(story, canvasElement, renderedStory);
}
var StoryHarness = ({ showError, name, title, storyFn, canvasElement }) => {
  let content = _(storyFn, null);
  return content || (showError({ title: `Expecting a Preact element from the story: "${name}" of "${title}".`, description: dedent`
        Did you forget to return the Preact element from the story?
        Use "() => (<MyComp/>)" or "() => { return <MyComp/>; }" when defining the story.
      ` }), null);
};
function renderToCanvas({ storyFn, title, name, showMain, showError, forceRemount }, canvasElement) {
  forceRemount && preactRender(null, canvasElement), showMain(), preactRender(_(StoryHarness, { name, title, showError, storyFn, canvasElement }), canvasElement);
}
var parameters = { renderer: "preact" };

export {
  entry_preview_exports,
  render2,
  renderToCanvas,
  parameters
};
//# sourceMappingURL=chunk-V7QZEBMB.js.map
