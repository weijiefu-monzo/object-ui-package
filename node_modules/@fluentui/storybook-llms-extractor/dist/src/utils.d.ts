import type { Args, StorybookStoreItem } from './types';
/**
 * Extracts data for all stories, including `MDX` stories.
 * Now uses Playwright routing instead of Express server.
 */
export declare function extractStorybookData({ distPath }: Args): Promise<StorybookStoreItem[]>;
/**
 * Converts HTML content to markdown.
 */
export declare function convertHtmlToMarkdown(htmlContent: string): Promise<string>;
/**
 * Writes the summary file for all store items.
 */
export declare function writeSummaryFile(args: Required<Args>, data: StorybookStoreItem[]): Promise<void>;
/**
 * Generates the summary file content from the storeItems array.
 */
export declare function generateSummaryContent({ summaryTitle, summaryDescription, summaryBaseUrl, refs }: Required<Args>, data: StorybookStoreItem[]): string[];
/**
 * Writes full markdown files for all components from `storeItems`.
 * For MDX pages, render only `fullSource`. For others, render title, description, props, and examples.
 */
export declare function writeFullDocsFiles({ distPath }: Required<Args>, data: StorybookStoreItem[]): Promise<void>;
/**
 * Generates the full markdown content for a given storybook story.
 */
export declare function generateFullFileContentFromStory(item: StorybookStoreItem): string[];
